name: Self-Assign Issue
on:
  issue_comment:
    types:
      - created

jobs:
  self_assign:
    runs-on: ubuntu-latest
    steps:
      - name: Check for assignment command
        id: verify_command
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.MY_SEC }}
          script: |
            const commentBody = context.payload.comment.body;
            const assignmentCommand = '/assignme';
            const commandExists = commentBody.includes(assignmentCommand);
            const commenter = context.payload.comment.user.login;
            const repoOwner = 'Puskar-Roy';
            
            const assigneeList = context.payload.issue.assignees.map(assignee => assignee.login);
            const hasAssignees = assigneeList.length > 0;

            console.log(`Comment Body: ${commentBody}`);
            console.log(`Commenter: ${commenter}`);
            console.log(`Repository Owner: ${repoOwner}`);
            console.log(`Command Exists: ${commandExists}`);
            console.log(`Assignees: ${assigneeList}`);
            console.log(`Has Assignees: ${hasAssignees}`);

            if (commandExists && hasAssignees) {
              console.log('Issue already assigned.');
              const { owner, repo, number } = context.issue;
              const responseMessage = `Hey @${commenter}, this issue is already assigned. Please find another issue to work on or create a new one. ðŸš€`;
              github.issues.createComment({ owner, repo, issue_number: number, body: responseMessage });
              return { toAssign: false };
            } else if (commandExists) {
              if (commenter === repoOwner) {
                console.log('Repository owner cannot self-assign.');
                return { toAssign: false };
              } else {
                console.log('Command found and issue not assigned.');
                return { toAssign: true };
              }
            } else {
              console.log('No command found.');
              return { toAssign: false };
            }

      - name: Assign the issue
        if: steps.verify_command.outputs.toAssign == 'true'
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.MY_SEC }}
          script: |
            console.log('Assigning issue...');
            const { owner, repo, number } = context.issue;
            const assignee = context.payload.comment.user.login;
            await github.issues.addAssignees({ owner, repo, issue_number: number, assignees: [assignee] });
            console.log(`Successfully assigned the issue to ${assignee}.`);
